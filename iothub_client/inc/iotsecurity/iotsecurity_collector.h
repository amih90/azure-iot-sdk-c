// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

#ifndef IOTSECURITY_COLLECTOR_H
#define IOTSECURITY_COLLECTOR_H

#ifdef __cplusplus
extern "C"
{
#else
#endif

#define RECORD_VALUE_MAX_LENGTH 512

typedef enum IOTSECURITY_COLLECTOR_RESULT_TAG {
    COLLECTOR_RESULT_OK = 0,
    COLLECTOR_RESULT_PENDING = 1,
    COLLECTOR_RESULT_EXCEPTION = 2,
    COLLECTOR_RESULT_PARSE_EXCEPTION = 3,
    COLLECTOR_RESULT_MEMORY_EXCEPTION = 4,
    COLLECTOR_RESULT_OFF = 5,
    COLLECTOR_RESULT_NOT_SUPPORTED_EXCEPTION = 6
} IOTSECURITY_COLLECTOR_RESULT;

typedef enum IOTSECURITY_COLLECTOR_TYPE_TAG {
    COLLECTOR_TYPE_SYSTEM_INFORMATION = 0,
    COLLECTOR_TYPE_NETWORK = 1
} IOTSECURITY_COLLECTOR_TYPE;

typedef enum IOTSECURITY_COLLECTOR_PRIORITY_TAG {
    COLLECTOR_PRIORITY_HIGH = 0,
    COLLECTOR_PRIORITY_MEDIUM = 1,
    COLLECTOR_PRIORITY_LOW = 2
} IOTSECURITY_COLLECTOR_PRIORITY;

typedef struct COLLECTOR_TAG
{
    IOTSECURITY_COLLECTOR_TYPE type;
    IOTSECURITY_COLLECTOR_PRIORITY priority;
    char** projectionAttributes;
} IOTSECURITY_COLLECTOR;


MOCKABLE_FUNCTION(, IOTSECURITY_COLLECTOR_RESULT, Collector_AddMetadata, JSON_Object, *root);


#ifdef __cplusplus
}
#endif

#endif /* IOTSECURITY_COLLECTOR_H */
